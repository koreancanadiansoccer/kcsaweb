# This is a basic workflow to help you get started with Actions

name: Deploy to staging

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [test-alice]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: npm install in client DIR
        run: |
          cd client
          pwd
          npm install

      # Step 2 : verification npm install
      - name: npm install for Server
        run: |
          pwd
          cd ..
          npm install

      # Step 3 : build client 
      - name: npm run build in Client DIR and Create Pull Requset
        run : |
          npm run build
          git config --global user.name 'koreancanadiansoccer'
          git config --global user.email 'koreancanadiansoccer@gmail.com'
          git commit -am "Add client npm build dir"
          git push origin test-alice

      # Step 4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

  # Deploy
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     # Step 1
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_REGION }}
  #     # Step 2
  #     - name: Create CodeDeploy Deployment
  #       id: deploy
  #       run: |
  #         aws deploy create-deployment \
  #           --application-name kcsa-webserver \
  #           --deployment-group-name deploy-kcsaweb-ec2 \
  #           --deployment-config-name CodeDeployDefault.OneAtATime \
  #           --ec2-tag-filters Key=name,Type=KEY_AND_VALUE,Value=webserver \
  #           --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
